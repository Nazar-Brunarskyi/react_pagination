{"version":3,"sources":["additionalFunctions/getFirstAndLastItem.ts","components/Pagination/Pagination.tsx","additionalFunctions/getPages.ts","additionalFunctions/getItems.ts","App.tsx","index.tsx"],"names":["getFirstAndLastItem","page","itemsPerPage","total","lastItem","firstItem","Pagination","props","perPage","currentPage","onPageChange","pages","n","i","push","getPages","Math","ceil","items","getItems","isBackButtonDisabled","isForwardButtonDisabled","length","className","classNames","disabled","href","onClick","map","active","event","newPage","currentTarget","textContent","item","App","useState","setItemsPerPage","setCurrentPage","id","value","onChange","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87b4465a.chunk.js","sourcesContent":["export function getFirstAndLastItem(\n  page: number,\n  itemsPerPage: number,\n  total: number,\n): [number, number] {\n  let lastItem = page * itemsPerPage;\n  const firstItem = lastItem - (itemsPerPage - 1);\n\n  if (lastItem > total) {\n    lastItem = total;\n  }\n\n  return [firstItem, lastItem];\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { getItems } from '../../additionalFunctions/getItems';\nimport { getPages } from '../../additionalFunctions/getPages';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (newPage: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = (props) => {\n  const {\n    total,\n    perPage,\n    currentPage,\n    onPageChange,\n  } = props;\n\n  const pages: number[] = getPages(Math.ceil(total / perPage));\n  const items: string[] = getItems(currentPage, perPage, total);\n  const isBackButtonDisabled = currentPage === 1;\n  const isForwardButtonDisabled = currentPage === pages[pages.length - 1];\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={classNames({\n            'page-item': true,\n            disabled: isBackButtonDisabled,\n          })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={isBackButtonDisabled}\n            onClick={() => {\n              if (!isBackButtonDisabled) {\n                onPageChange(currentPage - 1);\n              }\n            }}\n          >\n            «\n          </a>\n        </li>\n\n        {\n          pages.map(page => (\n            <li\n              key={page}\n              className={classNames({\n                'page-item': true,\n                active: page === currentPage,\n              })}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href=\"#2\"\n                onClick={(event) => {\n                  const newPage = event.currentTarget.textContent;\n\n                  if (newPage && currentPage !== +newPage) {\n                    onPageChange(+newPage);\n                  }\n                }}\n              >\n                {page}\n              </a>\n            </li>\n          ))\n        }\n\n        <li\n          className={classNames({\n            'page-item': true,\n            disabled: isForwardButtonDisabled,\n          })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={isForwardButtonDisabled}\n            onClick={() => {\n              if (!isForwardButtonDisabled) {\n                onPageChange(currentPage + 1);\n              }\n            }}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {\n          items.map(item => <li key={item} data-cy=\"item\">{item}</li>)\n        }\n      </ul>\n    </>\n  );\n};\n","export function getPages(n: number): number[] {\n  const pages: number[] = [];\n\n  for (let i = 1; i <= n; i += 1) {\n    pages.push(i);\n  }\n\n  return pages;\n}\n","import { getFirstAndLastItem } from './getFirstAndLastItem';\n\nexport function getItems(\n  page: number,\n  itemsPerPage: number,\n  total: number,\n): string[] {\n  const items: string[] = [];\n  const [firstItem, lastItem] = getFirstAndLastItem(page, itemsPerPage, total);\n\n  for (let i = firstItem; i <= lastItem; i += 1) {\n    items.push(`Item ${i}`);\n  }\n\n  return items;\n}\n","import React, { useState } from 'react';\nimport { getFirstAndLastItem } from './additionalFunctions/getFirstAndLastItem';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\n\nexport const App: React.FC = () => {\n  const [total] = useState(42);\n  const [itemsPerPage, setItemsPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const [\n    firstItem,\n    lastItem,\n  ] = getFirstAndLastItem(currentPage, itemsPerPage, total);\n\n  const changePage = (newPage: number): void => {\n    setCurrentPage(newPage);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem} - ${lastItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={(event) => {\n              setItemsPerPage(+event.currentTarget.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <Pagination\n        total={total}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={changePage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}